# Kafka consumer properties
# Consumer group id
group.id=cust-relations

# What to do if there's no initial offset for a consumer group
# Start at the earliest offset.  This allows us to read messages produces with
# all versions of the schema
auto.offset.reset=earliest

# KafkaAvroDeserializer properties
schema.registry.url=http://localhost:7788/api/v1
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=com.hortonworks.registries.schemaregistry.serdes.avro.kafka.KafkaAvroDeserializer

# Authentication credentials for connecting to the Schema Registry service
# schema.registry.auth.username=<MACHINE_USER_NAME>
# schema.registry.auth.password=<MACHINE_USER_PASSWORD>


# The property below specifies which schema version to use when deserializing messages
# from a topic. Format is the JSON representation of a Map(topic_name -> schema_version).
# If not specified, the client will use the same schema version used by the producer.
# schemaregistry.reader.schema.versions={"customers_avro": 2}

# End-to-end latency interceptor
#interceptor.classes=com.hortonworks.smm.kafka.monitoring.interceptors.MonitoringConsumerInterceptor
